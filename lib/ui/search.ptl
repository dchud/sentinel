# $Id$

_q_exports = [
    'search',
    ]

from quixote import get_publisher
from quixote import form2

import canary.context
from canary.loader import QueuedRecord
from canary.qx_defs import MyForm
from canary.search import Search, SearchIndex
from canary.study import Study
from canary.ui.record_ui import render_record_row
from canary.ui.pageframe import header, footer
from canary import utils

class SearchForm (MyForm):

    def __init__ (self, context):
        MyForm.__init__(self, context, method='get')
        self.add(form2.StringWidget, 'q',
            title='Enter one or more keywords',
            size=30,
            required=True)
        self.add_submit('go', 'go')



def search [html] (request):

    context = get_publisher().context
    form = SearchForm(context)
    source_catalog = context.get_source_catalog()
    complete_term_mapping = source_catalog.get_complete_mapping()
    
    def render [html] ():
        header("Search the database")
        """
        <h3>Search:</h3>
        """
        form.render()
        footer()

    if not form.is_submitted() \
        or form.has_errors():
        return render()
    
    header("Search results")
    """
    <h3>Search results</h3>
    """
    
    try:
        search_index = SearchIndex(context)
        raw_query = utils.fix_double_quotes(form['q'])
        hits, searcher = search_index.search(raw_query, 
            require_visible=True)
        
        count = hits.length()
        """
        <p>
        Your search: "%s", records found: %s
        </p>
        """ % (form['q'], count)
        
        if count > 0:
            """
            <div id="search-result">
                <table width="100%" border="0" cellspacing="0" cellpadding="0">
            """
            relevance_map = {}
            for i, doc in hits:
                uid = doc.get(str('uid'))
                record = QueuedRecord(context, uid)
                if record.status == record.STATUS_CURATED:
                    score = hits.score(i)
                    render_record_row(record, score)
            searcher.close()
            """
                </table>
            </div>
            """
        else:
            '<p>Nothing found.</p>'
    except:
        import traceback
        print traceback.print_exc()
        """
        <p>
        An error occurred with your search.  It's probably our fault, 
        though... we're very sorry, please try again!
        </p>
        """

    footer()
