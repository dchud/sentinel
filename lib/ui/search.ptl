_q_exports = [
    'search',
    ]

from quixote import get_publisher
from quixote import form2

from canary.qx_defs import MyForm
from canary.search import Search
#from canary.ui.browse_ui import render_record_row
from canary.ui.pageframe import header, footer


class SearchForm (MyForm):

    def __init__ (self):
        MyForm.__init__(self)
        self.add(form2.SingleSelectWidget, name='field',
            value='keyword',
            options=[(opt, opt, opt) for opt in [
                'keyword',
                'title',
                'author',
                'canary id',
                'unique id',
                ]],
            sort=False,
            required=True)
        self.add(form2.StringWidget, 'query',
            title='',
            size=30,
            required=True)
        self.add_submit('go', 'go')



def search [html] (request):

    form = SearchForm()
    cursor = get_publisher().get_cursor()
    source_catalog = get_publisher().get_source_catalog()
    complete_term_mapping = source_catalog.get_complete_mapping()
    
    def render [html] ():
        header("Search the database")
        """
        <h3>Search:</h3>
        """
        form.render(self, request, action_url)
        footer()

    search = Search(form['field'], form['query'])
    results = search.search(cursor, complete_term_mapping).get_results()
    
    header("Search results")
    """
    <h3>Search results</h3>
    """

    count = len(results)
    """
    <p>
    Your search: "%s" (%s), records found: %s
    </p>
    """ % (form['query'], form['field'], count)
    
    if count > 0:
        """
        <table cellspacing='5' class='gentable'>
        """
        for record in results:
            render_record_row(record)
        """
        </table>
        """
    else:
        '<p>Nothing found.</p>'

    footer()
    
    
    
def render_record_row [html] (record):
    
    source_catalog = get_publisher().get_source_catalog()
    complete_term_mapping = source_catalog.get_complete_mapping()
    
    mapped_md = record.get_mapped_metadata(term_map=complete_term_mapping)
    """
    <tr>
        <td>
            <a href='/record/%s'>%s</a> <br />
            %s <br />
            <font size='-1'>%s</font>
        </td>
    """ % (record.uid,
        ', '.join(mapped_md['author']),
        mapped_md['title'],
        mapped_md['source'])
        
    """
        <td>
            <!--
            <a href='http://sfx.library.yale.edu/links?id=[[PMID]]'>
                <img border='0' src='/yale_sfx2_gif'>
            </a>
            -->
            <!--
            <a href='http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?db=PubMed&cmd=Display&dopt=pubmed_pubmed&from_uid=[[PMID]]'>Pubmed related articles</a>
            -->
            [links]
        </td>
    </tr>
    """
